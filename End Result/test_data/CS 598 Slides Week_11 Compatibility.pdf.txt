standards compatibility challenges for integration and conversion data format conformance vs processor conformance some basic compatibility relationships compatibility backwards and forwards compatibility compatibility issues we discussed some of the challenges involved in integrating different formats and migration here we specifically look at the formalities of data standards compatibility especially with respect to adjusting to changing standards these issues can be can be huge questions for an organization or project conversions can be expensive lose information break commercial or locally developed applications tools and work flows and complicate relationships with collaborators suppliers and customers at the sametime falling behind can reduce functionality and access to new applications and tools and complicate relationships with collaborators suppliers and customers tools for conversion maybe available of course but they may not be reliable and obviously any local extensions or adaptations will be particularly vulnerable data format conformance vs processor conformance data standards can define conformance for both data and ii processing data set conformance might require such things as particular character encoding particular delimiters serialization matching particular formal grammar constraints such as referential integrity data types inclusion of relevant metadata processor conformance might require the processing software to correctly token ize verify that statements matcha particular grammar perform additional validation referential integrity data types etc confirm required metadata process datasets correctly eg performing particular actions such as generating normalized parse tree or performing calculations rendering visualization etc displaying an error when processing non conform ant datasets the processor may also be required to halt or it maybe allowed to continue data set conformance is tested by validating soft ward some basic compatibility relationships where and are versions of standard or schema the usual sorts of class relationships maybe defined data set diss valid dfd conforms to includes falls valid datasets are valid is equivalent to df includes and includes and overlap df some valid datasets are valid equivalent to some valid datasets are valid and properly overlap df some valid datasets are valid and some valid datasets are not valid excludes df no data set is both valid and valid nb includes is transitive overlap and proper overlap are not transitive whether or not equivalence implies identity is discussed further on next slide compatibility backwards and forwards consider standard or schemas that is replaced by new versions is backwards compatible with df includes usually not hard to achieve usually an objective ie all valid datasets are valid is forwards compatible with df includes sometimes hard to achieve so often not an objective ie all valid datasets are valid is equivalent to df includes and includes trivia lies validity and validity are co extensive isp compatible with df properly overlaps with sometimes achievable very good thing if possible ie some datasets are both both valid and valid but some are not nb backwards and forwards compatibility are transitive compatibility is not actually this depends on what level of representation is intended for standard schema identity at the highest conceptual levels and are the same standard if they determine the same set of conform ant datasets regardless of how they determine that set and so two ques it on do two schemas that are syntactically different and perhaps in different schema definition languages define as conform ant the same datasets this is not at all trivial so if syntactical difference counts as distinguishing schemas the equivalence is an important notion not term in common use compatibility in the case of compatibility there is an on null intersection of valid and valid but not all valid datasets are valid what are the consequences of getting into or staying in that intersection can existing valid files be converted to that intersection without loss of information or functionality here is simple example tag minimization is allowed in sgml but not supported in xml in this case conversion is trivial not so simple but xml also does not allow schemas to depart for standard formal grammars by allowing inclusion or exclusion of elements in element tree it is quite bit more work to bring schemas into line here compatibility an example from 19992002 re near was chair of the open ebook publications working group which developed oe bp san early versione pub ebook content form to eb psa replace do eb psa backwards comp tibi lt iy was not possible so was designed so that large subset of actual and possible documents would also be conform ant this allowed many already existing documents to also be conform ant content producers in shops to continue to use existing software tools and work flows to produce documents that were also conform ant content producers in shops to to use new software tools and work flows to produce documents that were also conform ant as well as conform ant applications eg ebook production tools and consumer readers to continue to process conform ant data if it was in the compatible subset applications eg new ebook production tools and consumer readers to process conform ant data if it was in the compatible subset you can see why compatibility is good compromise if you get it backwards compatibility details changed to protect the innocent
