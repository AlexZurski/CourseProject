  the relational model subtitle goes here university of illinois at urbana champaign the relational model the problem the solution relations the relational model how the relational model addresses the problem relations from mathematical pov the two fundamental principles of data organization abstraction in direction the problem again we have just described two fundamental problems facing data management programs and users interact with data directly via its storage structure and those storage structures vary wildly the intrinsic nature of the information is not reflected in the management systems these systems to not explicitly reflect the attributes relationships etc that are the genuine components of the information being stored and managed the solution in 1970 efc odd proposed simple solution efc odd in relational model of data for large shared data banks 1970 perhaps the most cited paper in computer science conceptualize data as relations tables and the nmap those relations to whatever storage methods are being used it changed the world efc odd relations aka tables works work author title date lastname first name 58425 42425 moby dick 1851 melville herman 85246 24246 the scarlett letter 1860 hawthorne nathaniel 55427 24246 fanshawe 1828 hawthorne nathaniel why it works the relational model is simple single high level abstraction for conceptualizing information it is in different to the details of physical storage and processing all interactions with the data are in relational tabular terms such as attributes values tuples those interactions are translated into instructions expressed in terms of storage data instructions operations on data are based on formally defined well understood operations from logic and set theory how it works many of the problems described earlier resolved or mitigated by this approach programmers and other users need know nothing about storage methods programmers can learn common language and approach to data management documentation will have common structure and organization established mathematical methods maybe used such asset theory and logic data from different sources can be integrated more easily data will be easier to check for validity and quality data independence is supported storage methods can be changed without impacting programs new data constructs can be added without impacting programs simple and relentless conceptualize all information in terms of relations rows columns values whenever you say anything say it in relations whenever you do anything do it with relations whenever you talk talk in relations whenever you think think in relations rows columns and values nothing else ever upload your data in rows and columns query your data in rows and columns receive your query results in rows and columns only buy software that works on rows and column seat drink and sleep rows and columns pay no attention to how the information is stored that not your problem relations relations relations relations the end 10 internal external whatever you do in the privacy of your own cpu is your business but the interface you present in public must be relations adapted from michaels per berg mcqueen relations from mathematical pov relation is set of tuples 12 58425 42425 moby dick 1851 melville herman 85246 24246 the scarlet letter 1860 hawthorne nathaniel 55427 24246 fanshawe 1828 hawthorne nathaniel relations from mathematical pov more formally an nary relation onsets an is any subset of xx an where each set an is the set of possible values for an attribute and xx an is the cartesian product of those sets and so is the set of all sets of tuples relations for those attribute values andr will thus be one of those sets of tuples these tsai are the domains of the relation and is the degree of the relation from rosen 13 two key principles abstraction and in direction abstraction our data model is an abstraction it abstracts away from the transient and varying details of storage and processing and focuses on the essential features of the data itself in direction relational data management systems do not directly interact with the stored data representations instead they interact indirectly with the stored data representations via the relational representation that is mapped to the actual storage representation 14 
