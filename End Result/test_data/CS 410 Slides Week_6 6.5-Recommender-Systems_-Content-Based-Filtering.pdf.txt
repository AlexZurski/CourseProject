recommender systems cheng xiang department of computer science university of illinois at urbana champaign recommend er systems big textdata small relevant data search engine recommend er system text access 10 web search text retrieval problem system implementation user natural language content analysis text retrieval methods 11 recommendation evaluation vector space model probabilistic model feedback two modes of text access pull vs push pull mode search engines users take initiative ad hoc information need push mode recommender systems systems take initiatives table information need or system has good recommend er filtering system stable long term interest dynamic info source system must make delivery decision immediately as filtering system my interest basic filtering question will user like item two different ways of answering it look at what items likes and then check if is similar look at who likes and then check if is similar can be combined item similarity content based filtering user similarity collaborative filtering atypical content based filtering system binary class fier user interest profile user doc source accepted docs initialization learning feedback accumulated docs utility fun user profile text linear utility good bad good bad number of good bad documents delivered to user are the coefficients 32 reasonable what about 101 or 110 three basic problems in content based filtering making filtering decision binary class fier doc text profile text yes no initialization initialize the filter based on only the profile text or very few examples learning from accumulated documents all trying to maximize the utility extend retrieval system for information filtering use score threshold for filtering decision learn to improve scoring with traditional feedback new approaches to threshold setting and learning general vector space approach doc vector profile vector scoring threshold ing yes no feedback information vector learning threshold learning threshold utility evaluation 10 difficulties in threshold learning 365 rel 334 no nrel 321 rel 299273300 censored data judgments only available on delivered documents little none labeled data exploration vs exploitation no judgments are available for these documents 11 empirical utility optimization basic idea compute the utility on the training data for each candidate score threshold choose the threshold that gives the maximum utility on the training data set difficulty biased training sample we can only get an upper bound for the true optimal threshold could discarded item be possibly interesting to the user solution heuristic adjustment lowering of threshold 12 beta gamma threshold learning cutoff position descending order of doc scores utility 01 the more examples the less exploration closer to optimal encourage exploration up to zero 13 beta gamma threshold learning cont pros explicitly addresses exploration exploration arbitrary utility with appropriate lower bound empirically effective cons purely heuristic zero utility lower bound often too conservative summary two strategies for recommendation filtering content based item similarity collaborative filtering user similarity content based recommender system can be built based on search engine system by adding threshold mechanism adding adaptive learning algorithms 14
