  managing heterogeneity university of illinois at urbana champaign managing heterogeneity managing encoding heterogeneity managing syntax heterogeneity managing model heterogeneity managing representational heterogeneity managing semantic heterogeneity managing processing heterogeneity managing policy heterogeneity data integration combining data residing indifference sources and providing users with unified view lenz erin 2002 kinds of heterogeneity again encoding heterogeneity different mappings from bitstream into bytes characters numbers or other logical units syntax heterogeneity different data description languages for the same model type eg rdf xml vs model heterogeneity different model type eg relations vs entities relationships representational heterogeneity different modeling choices within model type eg relationships vs entities semantic heterogeneity different conceptualization of similar domain features processing heterogeneity eg different maintenance and update regimes policy heterogeneity eg different privacy and security rules varying ownership and licensing etc adapted from bertram lu dsc her kaili shawn bowers efrat jae ger frank boy an broda ric cha it an baru managing scientific data from data integration to scientific work flows geo informatics data to knowledge 2006 and amit she th changing focus on interoperability in information systems from system syntax structure to semantics in good child me gen hofer rf ge as and ck ott man editors inter operating geographic information systems kluwe 1998 relatively easy often difficult usually very difficult managing encoding heterogeneity variations in character encodings or other logical atoms byte interpretation bitstream management magnetic tape formatting etc have created many problems how many bits in the octet are coding is the byte to be read left to right or right to left are there control bytes in the bitstream what are line end and carriage return characters if sets of logical atoms are not identical there is no complete 11 conversion and variety of problematic resolutions such as con flat ion unification omission and named references must be considered and if the nature of the logical atoms maybe unclear is that adi aere is or umlaut but thanks to common tools and conventions particularly unicode encoding is less of an issue now to be sure the mapping from bitstream to characters is extremely complex see unicode character encoding model ken whistler mark davis unicode technical report 17 but global implementation of the unicode standard is robust and complete syntax heterogeneity converting from one syntax to another within the same general data model is very common data cu ration activity for instance from sgml to xml or json or from rdf xml ton or turtle schemas also may need to be converted from one schema language to another for instance from xml dtd schema language tow xml schema or xml relax ng syntax conversions can be challenging but often can be accomplished without loss of information and for common conversions there exist effective tools there can be problems though particularly at the schema level for example xml schema has more data typing options than xml sgml dtd have grammar constraints difficult to implement in xml dtd model heterogeneity the same information can be expressed using completely different types of data models eg relations vs trees vs on to logie conversion from one data model to another is often needed for data integration preservation exchange to use particular tools and applications conversions such as these are particularly important in data curation exporting xml files from relational database using relational database to store xml documents converting relations to rdf graphs and rdf graphs to relations methods for these conversions are exist but they can be challenging to implement and may not provide the same functionality data typing or constraints in addition they may not be natural imagine storing an xhtml webpage as relations most importantly new schema for an equivalent but different data model will need to be developed representational heterogeneity here are two classic problems for representational heterogeneity for xml element or attribute chapter or div type chapter for on to logie entity or relationship the pros and cons of expressively equivalent modeling choices can be difficult to evaluate person school enrolled in student or semantic heterogeneity this is the most challenging heterogeneity we take in up in the next video processing heterogeneity some examples modification differences instance level one data set is updated weekly another monthly another when observations change related lack of atomic it yone data set is undergoes integrity and validation weekly another after every update one data set documents provenance of modifications another does not these are particularly problems for federated datasets but also for derived combined datasets especially when they are routinely and perhaps automatically derived et modeling differences datasets may undergo schema changes without notification or coordination metadata differences datasets may undergo schema changes without notification or coordination policy heterogeneity information maybe subject to different restrictions related to ownership privacy libel security disclosure etc as data set may have originated in one country be about the citizens of another be owned by third be stored in fourth and be accessed by users in many others legal and regulatory requirements maybe complex even inconsistent and another to be integrated with the first may have etc data derived by analysis from input data from multiple sources adds additional complexity imagine deduction from data from multiple sources 
