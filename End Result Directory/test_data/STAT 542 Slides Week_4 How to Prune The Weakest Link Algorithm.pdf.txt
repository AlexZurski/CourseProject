tr tt some facts for pair of leaf nodes ltr there exists such that for any we would like to collapse them to just node for any keep the two leaf nodes that is is the maximal price we would like to pay to keep that split next we extend this calculation to compute the maximal price we would like to pay to keep branch tt 16 for any non leaf node do the following calculation to nd out the maximal price wed like to pay for keeping the whole branch tt focus only on samples at node cost for keeping branch tt rt tr ttt cost for cutting branch tt rt rt calculate rt rt ttt that is if the given then it is too expensive to keep this branch and we would like to cut the whole branch and make ta leaf node 17 weakest link pruning the weakest link pruning algorithm start with max and 00 for any non leaf node denote the maximal price wed like to pay to keep tt by mint the corresponding non terminal node is called the weakest link cut the branch at next update the maximal price for each non leaf node we only need tore compute the maximal price for nodes that are parents grandparents of find and cut the branch at the nd weakest link keep doing this until we get to the root 18 the steps above generate solution path max root node 0012 all possible values of are grouped in tom intervals 001 112 mm where all ii share the same optimal subtree ti 19
