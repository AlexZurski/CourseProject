  the problem connecting data to information university of illinois at urbana champaign the problem connecting data to information tables and trees abstract away from storage and processing and let us focus on the data itself but just as there are many ways to store the same data there are also many ways to use tables and trees to express the same information this results problems similar but different than we saw with tables and trees setting up the problem imagine that you you need to manage some data you might use xml trees or you might use relations or you might use rdf triples or you might start with xml trees then in few years use relations and then later use rdf triples but all through these changes your domain of interest remains pretty much the same the same kinds of things the same kinds of properties the same kinds of relationships moreover schemas for domain are frequently revised even within single type of logical data model but again even as schema details and structures are updated the domain remains the same so different data model types and different schemas within data model type but through all this just one domain of kinds of objects relationships properties the problem so different data models types and different schemas within data model but just one domain of kinds of objects relationships properties so obviously our understanding of that domain is of course extremely important in single domain that understanding guides initial schema development is constant across schema variations and revisions within model type is constant across schemas from different model types but where is this understanding of the domain articulated and how is it connected to these logical schemas too often only in the memory of programmers and other staff even when prose documentation of the domain features exists that documentation rarely provides the formal precision and completeness needed to be useful nor the mathematical constructs needed for computer processing how to solve this problem to address this problem we need an independent neutral way to describe the domain of interest this description cannot be tied to any particular logical model or to implementation variations of different specific schemas within logical model it must in fact abstract away from logical models and schema variations just as those logical models themselves abstracted away from storage methods this description should be similarly precise complete and mathematical and it must be possible to map these descriptions to schemas at the logical level you look skeptical it is natural to feel that this is going too far after all when we look at schema we feel that in fact it is describing the domain but this is because of all the information we bring to bear in interpreting that schema and since we do this so naturally and routinely we tend to forget just how technical and thin the formal theory of the relation model islets look at the issue from different perspective what we think we see vs what is really there what we intend to do here is record here and what you see information propositions we believe to be true eg 58425 work is titled moby dick and was published in 1851 but given the formalities of the relational model the relations explicit semantics produces at best this proposition there is tuple where the primary key work id has the value 5825 and the title attribute has as its value the string moby dick work id author title first published 58425 42425 moby dick 1851 85246 24246 the scarlet letter 1850 55427 24246 fanshawe 1828 take look at this relation what do you see what is it saying to you the missing link information yes you can indeed infer from that relation that 58425 work is titled moby dick and was published in 1851 but that is an inference humans make we can make such inferences from the fact that in particular tuple certain attributes have certain values but the relational model does not support this inference and we make the inference using background information english meanings of column headings and values knowledge of the domain commonsense conversations with the db bits of ancient documentation etc this makes the meaning the semantics of the relation unreliable and inaccessible to computer processing 10 work id author title first published 58425 42425 moby dick 1851 85246 24246 the scarlet letter 1850 55427 24246 fanshawe 1828 note that in the formal relational model the column headings are not attributes in the ordinary sense properties they are domain names strings mapped to sets of allowed values and there is no sense in pure relational theory in which the value of an attribute value pair is asserted of said about or describes the thing identified by the corresponding primary key that is all added interpretation even when intended by the database designer and in many cases that particular interpretation would be false or senseless eg tables for mm relationships the heart of the problem we lack shared framework that could explicitly and formally map the relevant features in the domain of interest to the relation or tree schemas for data about those things such framework could be used to guide relation and tree schema development and revision and to identify the common domain features reflected in different relation and tree schemas the framework would also provide relation and tree schemas with semantics and as consequence their instances relations and trees would have meaning and assert propositions without that we really dont know formally what relation or an xml document is telling us yes its in our head but that not good enough we need yet another level of abstraction 
